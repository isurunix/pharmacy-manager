/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vidulaPharma.view.admin;

import com.sun.jmx.remote.util.OrderClassLoaders;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import vidulaPharma.controller.SupplierController;
import vidulaPharma.controller.SupplierOrderController;
import vidulaPharma.controller.SupplierOrderDetailController;
import vidulaPharma.controller.SupplierPaymentController;
import vidulaPharma.controller.TradeNameController;
import vidulaPharma.model.Drug;
import vidulaPharma.model.Supplier;
import vidulaPharma.model.SupplierOrder;
import vidulaPharma.model.SupplierOrderDetail;
import vidulaPharma.model.SupplierPayment;
import vidulaPharma.model.TradeName;

/**
 *
 * @author isuru
 */
public class AddOrderForm extends javax.swing.JInternalFrame {
    private DefaultTableModel dtm;
    private static AddOrderForm addOrderForm;
    private List<TradeName> drugNamesList;
    private List<SupplierOrderDetail> drugList;
    private  SupplierOrder supplierOrder;
    private String orderId;
    private Supplier supplier;
    private TradeName tradeName;
    /**
     * Creates new form AddOrderForm
     */
    private AddOrderForm() {
        initComponents();
        refreshAll();
        drugNamesList = new ArrayList<>();
        drugList = new ArrayList<>();
        try {
            orderId = SupplierOrderController.getNewId();
        } catch (SQLException ex) {
            Logger.getLogger(AddOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public static AddOrderForm getInstance() {
        if (addOrderForm == null) {
            addOrderForm = new AddOrderForm();
        }
        return addOrderForm;
    }
    
    protected void setDrug(Drug drug){
        try {
            TradeName tName = TradeNameController.searchTradeId(drug.getDrugNameId());
            drugCombo.removeAllItems();
            drugCombo.addItem(tName);
            drugCombo.setSelectedItem(tName);
            drugCombo.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(AddOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void refreshAll(){
        supplierCombo.setEnabled(true);
        initCombos();
        qtyText.setText("");
        doseText.setText("");
        orderTable.removeAll();
        AddOrderForm.this.repaint();
        //deliveryDateChooser.setDate(new Date());
    }

    private void initCombos() {
        try {
            ArrayList<Supplier> supplierList = (ArrayList<Supplier>) SupplierController.getAll();
            ArrayList<TradeName> drugNamesList = (ArrayList<TradeName>) TradeNameController.getAll();

            Iterator<Supplier> suppIterator = supplierList.iterator();
            while (suppIterator.hasNext()) {
                supplierCombo.addItem(suppIterator.next());
            }

            Iterator<TradeName> drugIterator = drugNamesList.iterator();
            while (drugIterator.hasNext()) {
                drugCombo.addItem(drugIterator.next());
            }
            
            supplierCombo.setSelectedIndex(0);
            drugCombo.setSelectedIndex(0);
            unitCombo.setSelectedIndex(0);
        } catch (SQLException ex) {
            Logger.getLogger(AddOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.dD
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        suppllierLabel = new javax.swing.JLabel();
        supplierCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        drugCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        unitCombo = new javax.swing.JComboBox();
        qtyText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        doseText = new javax.swing.JTextField();
        deliveryDateChooser = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setTitle("Add Order");

        suppllierLabel.setText("Select Supplier");

        supplierCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Supplier" }));
        supplierCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboActionPerformed(evt);
            }
        });
        supplierCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                supplierComboKeyPressed(evt);
            }
        });

        jLabel1.setText("Select Drug");

        drugCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select drug" }));
        drugCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugComboActionPerformed(evt);
            }
        });
        drugCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                drugComboKeyPressed(evt);
            }
        });

        jLabel2.setText("Quantity");

        jLabel3.setText("Unit");

        unitCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Unit Type", "Pill", "Tablet", "Oinment(Cream)", "Sirup", " " }));
        unitCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitComboActionPerformed(evt);
            }
        });
        unitCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unitComboKeyPressed(evt);
            }
        });

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });
        qtyText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyTextKeyTyped(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Qty", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderTable);
        orderTable.getColumnModel().getColumn(0).setResizable(false);
        orderTable.getColumnModel().getColumn(1).setResizable(false);
        orderTable.getColumnModel().getColumn(2).setResizable(false);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Delivery Date");

        jLabel5.setText("Dose");

        doseText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doseTextActionPerformed(evt);
            }
        });
        doseText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doseTextKeyTyped(evt);
            }
        });

        deliveryDateChooser.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(suppllierLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(unitCombo, 0, 414, Short.MAX_VALUE)
                            .addComponent(qtyText)
                            .addComponent(doseText)
                            .addComponent(drugCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deliveryDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppllierLabel)
                            .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(drugCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(doseText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(unitCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton)
                                .addGap(18, 36, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(deliveryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboActionPerformed
        // TODO add your handling code here:
        //drugCombo.requestFocus();
    }//GEN-LAST:event_supplierComboActionPerformed

    private void drugComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugComboActionPerformed
        // TODO add your handling code here:
        //qtyText.requestFocus();
    }//GEN-LAST:event_drugComboActionPerformed

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        // TODO add your handling code here:
        unitCombo.requestFocus();
    }//GEN-LAST:event_qtyTextActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        
        String dose;
        int qty;
        String unitType = "";
        if (supplierCombo.getSelectedIndex() != 0 || supplierCombo.getSelectedIndex() != -1) {
            supplier = (Supplier) supplierCombo.getSelectedItem();
        }
        if (drugCombo.getSelectedIndex() != 0 || drugCombo.getSelectedIndex() != -1) {
            tradeName = (TradeName) drugCombo.getSelectedItem();
            drugNamesList.add(tradeName);
        }
        //
        dose = doseText.getText();
        qty = Integer.parseInt(qtyText.getText());
        unitType = (String) unitCombo.getSelectedItem();
        //
        
        //SupplierOrder supplierOrder = new SupplierOrder(orderId, supplier.getSupplierId(),date, unitType);
        SupplierOrderDetail orderDetail = new SupplierOrderDetail(orderId, tradeName.getTradeId(), 0.0, unitType, Integer.toString(qty), Integer.parseInt(dose));
        drugList.add(orderDetail);
        Object[] row = {tradeName,qty,unitType};
        dtm = (DefaultTableModel) orderTable.getModel();
        dtm.addRow(row);
        refreshAll();
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void unitComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitComboActionPerformed
        // TODO add your handling code here:
        //addButton.doClick();
    }//GEN-LAST:event_unitComboActionPerformed

    private void supplierComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierComboKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            if(supplierCombo.getSelectedIndex()>0){
                if(drugCombo.isEnabled()){
                    drugCombo.requestFocus();
                }else{
                    doseText.setEnabled(true);
                    doseText.requestFocus();
                }
                supplierCombo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_supplierComboKeyPressed

    private void drugComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_drugComboKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            doseText.requestFocus();
        }
    }//GEN-LAST:event_drugComboKeyPressed

    private void unitComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitComboKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            addButton.doClick();
            drugCombo.setSelectedIndex(0);
            drugCombo.requestFocus();
            doseText.setText("");
            qtyText.setText("");
        }
    }//GEN-LAST:event_unitComboKeyPressed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if(orderTable.getRowCount()>0 && !((JTextField)deliveryDateChooser.getDateEditor().getUiComponent()).getText().isEmpty()){
            if(deliveryDateChooser.getDate().after(new Date())){
                try {
                    String date = new SimpleDateFormat("dd/MM/yyyy").format(deliveryDateChooser.getDate());
                    SupplierPayment payment = new SupplierPayment(SupplierPaymentController.getNewId(), "OWNER", date,0.0,false);
                    boolean paymentAdded = SupplierPaymentController.addSupplierPayment(payment);
                    if(paymentAdded){
                        SupplierOrder order = new SupplierOrder(orderId, supplier.getSupplierId(), date, payment.getPaymentId());
                        boolean orderAdded = SupplierOrderController.addSupplierOrder(order);
                        boolean detailsAdded = false;
                        if(orderAdded){
                           detailsAdded = SupplierOrderDetailController.adOrderdetail(drugList);
                        }
                        if(detailsAdded){
                            JOptionPane.showInternalMessageDialog(AddOrderForm.this, "Order Successfully Added !", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                            refreshAll();
                            DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
                            model.setRowCount(0);
                            supplierCombo.requestFocus();
                            
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(AddOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void qtyTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTextKeyTyped
        char keyChar = evt.getKeyChar();
        if(!Character.isDigit(keyChar)){
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTextKeyTyped

    private void doseTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doseTextActionPerformed
        qtyText.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_doseTextActionPerformed

    private void doseTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doseTextKeyTyped
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        if(!Character.isDigit(keyChar)){
            evt.consume();
        }
    }//GEN-LAST:event_doseTextKeyTyped

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private com.toedter.calendar.JDateChooser deliveryDateChooser;
    private javax.swing.JTextField doseText;
    private javax.swing.JComboBox drugCombo;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField qtyText;
    private javax.swing.JComboBox supplierCombo;
    private javax.swing.JLabel suppllierLabel;
    private javax.swing.JComboBox unitCombo;
    // End of variables declaration//GEN-END:variables
}
